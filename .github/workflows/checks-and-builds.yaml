name: checks

on:
  workflow_call:
    inputs:
      publish:
        required: false
        type: string
        default: "false"

jobs:
  check-style:
    runs-on: ubuntu-latest
    container:
      image: rapidsai/ci-conda:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check style
        run: "./ci/check_style.sh"
  build-conda:
    needs: check-style
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-build.yaml@branch-24.06
    with:
      build_type: branch
      script: "ci/build_python.sh"
      # Select only the build with the minimum Python version and the maximum CUDA version
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(min_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))])) | [max_by(.PY_VER|split(".")|map(tonumber))]
  build-wheel:
    needs: check-style
    uses: rapidsai/shared-workflows/.github/workflows/whels-build.yaml@branch-24.06
    with:
      build_type: branch
      script: "ci/build_wheel.sh"
      # Select only the build with the minimum Python version and the maximum CUDA version
      matrix_filter: map(select(.ARCH == "amd64")) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(min_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))])) | [max_by(.PY_VER|split(".")|map(tonumber))]
